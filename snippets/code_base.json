[
  {
    "title": "Pandas Missing Value Imputation",
    "summary": "Replace missing values in a DataFrame with column means or medians.",
    "body": "import pandas as pd\n\ndef impute_missing_values(df):\n    for col in df.columns:\n        if df[col].dtype in ['float64', 'int64']:\n            df[col].fillna(df[col].median(), inplace=True)\n    return df",
    "tags": ["data-cleaning", "pandas", "missing-data"]
  },
  {
    "title": "Matplotlib Histogram with Custom Bins",
    "summary": "Plot a histogram with customized bin edges and styling.",
    "body": "import matplotlib.pyplot as plt\n\ndef plot_histogram(data, bins=10, color='skyblue'):\n    plt.hist(data, bins=bins, color=color, edgecolor='black')\n    plt.xlabel('Values')\n    plt.ylabel('Frequency')\n    plt.title('Distribution of Data')\n    plt.show()",
    "tags": ["data-cleaning", "pandas", "missing-data"]
  },
  {
    "title": "Z-Score Normalization",
    "summary": "Normalize data using Z-score standardization (mean=0, std=1).",
    "body": "from sklearn.preprocessing import StandardScaler\n\ndef standardize_data(data):\n    scaler = StandardScaler()\n    return scaler.fit_transform(data)",
    "tags": ["data-cleaning", "pandas", "missing-data"]
  },
  {
    "title": "One-Hot Encoding for Categorical Variables",
    "summary": "Convert categorical variables into binary columns using pandas.",
    "body": "import pandas as pd\n\ndef one_hot_encode(df, columns):\n    return pd.get_dummies(df, columns=columns)",
    "tags": ["data-cleaning", "pandas", "missing-data"]
  },
  {
    "title": "Train-Test Split",
    "summary": "Split dataset into training and testing subsets.",
    "body": "from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42\n)",
    "tags": ["data-cleaning", "pandas", "missing-data"]
  }
]